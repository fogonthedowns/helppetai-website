---
description: Testing Patterns (Unit, Integration, E2E)
globs:
alwaysApply: false
---

# Testing Patterns (Unit, Integration, E2E)

## Unit Tests (Repository Layer)
```python
# test_patient_repository.py
@pytest.fixture
async def mock_patient():
    return Patient(
        id=uuid4(),
        first_name="John",
        last_name="Doe",
        medical_record_number="MRN123"
    )

async def test_create_patient(mock_patient):
    result = await PatientRepository.create(mock_patient)
    assert result.id is not None
```

## Integration Tests (API Layer)
```python
@pytest.mark.asyncio
async def test_get_patients_endpoint():
    async with AsyncClient(app=app, base_url="http://test") as client:
        response = await client.get("/patients")
        assert response.status_code == 200
        assert "patients" in response.json()
```

## E2E Tests (Frontend)
```typescript
// cypress/e2e/patient-flow.cy.ts
describe('Patient Management', () => {
  it('creates and views patient', () => {
    cy.visit('/patients/new');
    cy.get('[data-testid="first-name"]').type('John');
    cy.get('[data-testid="submit"]').click();
    cy.url().should('include', '/patients/');
  });
});
```