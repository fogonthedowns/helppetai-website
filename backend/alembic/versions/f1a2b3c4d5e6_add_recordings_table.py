"""add_recordings_table

Revision ID: f1a2b3c4d5e6
Revises: 927f6fc5a84b
Create Date: 2025-09-01 19:10:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f1a2b3c4d5e6'
down_revision = '927f6fc5a84b'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recordings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('visit_id', sa.UUID(), nullable=True),
    sa.Column('appointment_id', sa.UUID(), nullable=True),
    sa.Column('recorded_by_user_id', sa.UUID(), nullable=False),
    sa.Column('recording_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('file_size_bytes', sa.Integer(), nullable=True),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('s3_bucket', sa.String(length=100), nullable=False),
    sa.Column('s3_key', sa.String(length=500), nullable=False),
    sa.Column('s3_url', sa.String(length=1000), nullable=True),
    sa.Column('transcript_text', sa.Text(), nullable=True),
    sa.Column('transcript_confidence', sa.Float(), nullable=True),
    sa.Column('transcript_language', sa.String(length=10), nullable=True),
    sa.Column('transcription_service', sa.String(length=50), nullable=True),
    sa.Column('processing_started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processing_completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('recording_metadata', sa.String(length=2000), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_by_user_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['deleted_by_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['recorded_by_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['visit_id'], ['visits.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recordings_appointment_id'), 'recordings', ['appointment_id'], unique=False)
    op.create_index(op.f('ix_recordings_is_deleted'), 'recordings', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_recordings_recorded_by_user_id'), 'recordings', ['recorded_by_user_id'], unique=False)
    op.create_index(op.f('ix_recordings_status'), 'recordings', ['status'], unique=False)
    op.create_index(op.f('ix_recordings_visit_id'), 'recordings', ['visit_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_recordings_visit_id'), table_name='recordings')
    op.drop_index(op.f('ix_recordings_status'), table_name='recordings')
    op.drop_index(op.f('ix_recordings_recorded_by_user_id'), table_name='recordings')
    op.drop_index(op.f('ix_recordings_is_deleted'), table_name='recordings')
    op.drop_index(op.f('ix_recordings_appointment_id'), table_name='recordings')
    op.drop_table('recordings')
    # ### end Alembic commands ###
