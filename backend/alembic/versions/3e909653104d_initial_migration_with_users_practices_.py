"""Initial migration with users, practices, pet_owners, and associations

Revision ID: 3e909653104d
Revises: 
Create Date: 2025-08-29 15:53:38.496701

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3e909653104d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('role', sa.Enum('PET_OWNER', 'VET_STAFF', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('practice_id', sa.UUID(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_practice_id'), 'users', ['practice_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('veterinary_practices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('address_line1', sa.String(length=255), nullable=True),
    sa.Column('address_line2', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('zip_code', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('license_number', sa.String(length=100), nullable=True),
    sa.Column('tax_id', sa.String(length=50), nullable=True),
    sa.Column('hours_of_operation', sa.Text(), nullable=True),
    sa.Column('emergency_contact', sa.String(length=20), nullable=True),
    sa.Column('max_appointments_per_day', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('accepts_new_patients', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('license_number')
    )
    op.create_index(op.f('ix_veterinary_practices_name'), 'veterinary_practices', ['name'], unique=False)
    op.create_table('pet_owners',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('emergency_contact', sa.String(length=20), nullable=True),
    sa.Column('secondary_phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('preferred_communication', sa.Enum('EMAIL', 'SMS', 'PHONE', name='preferredcommunication'), nullable=False),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pet_owners_email'), 'pet_owners', ['email'], unique=False)
    op.create_index(op.f('ix_pet_owners_full_name'), 'pet_owners', ['full_name'], unique=False)
    op.create_index(op.f('ix_pet_owners_phone'), 'pet_owners', ['phone'], unique=False)
    op.create_index(op.f('ix_pet_owners_user_id'), 'pet_owners', ['user_id'], unique=False)
    op.create_table('pet_owner_practice_associations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('pet_owner_id', sa.UUID(), nullable=False),
    sa.Column('practice_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'INACTIVE', name='associationstatus'), nullable=False),
    sa.Column('request_type', sa.Enum('NEW_CLIENT', 'REFERRAL', 'TRANSFER', 'EMERGENCY', name='associationrequesttype'), nullable=False),
    sa.Column('requested_by_user_id', sa.UUID(), nullable=True),
    sa.Column('approved_by_user_id', sa.UUID(), nullable=True),
    sa.Column('requested_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_visit_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('primary_contact', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['approved_by_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['pet_owner_id'], ['pet_owners.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['practice_id'], ['veterinary_practices.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['requested_by_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_index(op.f('ix_pet_owner_practice_associations_pet_owner_id'), 'pet_owner_practice_associations', ['pet_owner_id'], unique=False)
    op.create_index(op.f('ix_pet_owner_practice_associations_practice_id'), 'pet_owner_practice_associations', ['practice_id'], unique=False)
    op.create_index(op.f('ix_pet_owner_practice_associations_status'), 'pet_owner_practice_associations', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_pet_owner_practice_associations_status'), table_name='pet_owner_practice_associations')
    op.drop_index(op.f('ix_pet_owner_practice_associations_practice_id'), table_name='pet_owner_practice_associations')
    op.drop_index(op.f('ix_pet_owner_practice_associations_pet_owner_id'), table_name='pet_owner_practice_associations')
    op.drop_table('pet_owner_practice_associations')
    op.drop_index(op.f('ix_pet_owners_user_id'), table_name='pet_owners')
    op.drop_index(op.f('ix_pet_owners_phone'), table_name='pet_owners')
    op.drop_index(op.f('ix_pet_owners_full_name'), table_name='pet_owners')
    op.drop_index(op.f('ix_pet_owners_email'), table_name='pet_owners')
    op.drop_table('pet_owners')
    op.drop_index(op.f('ix_veterinary_practices_name'), table_name='veterinary_practices')
    op.drop_table('veterinary_practices')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_practice_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
